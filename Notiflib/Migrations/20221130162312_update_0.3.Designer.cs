// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Notiflib;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Notiflib.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20221130162312_update_0.3")]
    partial class update03
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Notiflib.Application", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("application_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<bool>("accepted")
                        .HasColumnType("boolean");

                    b.Property<int>("app_fk")
                        .HasColumnType("integer");

                    b.Property<int>("event_app_fk")
                        .HasColumnType("integer");

                    b.Property<int>("usr_app_fk")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("app_fk");

                    b.HasIndex("event_app_fk");

                    b.HasIndex("usr_app_fk");

                    b.ToTable("applications");
                });

            modelBuilder.Entity("Notiflib.ApplicationType", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("application_type_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("applicationTypes");
                });

            modelBuilder.Entity("Notiflib.Event", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("event_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("creator_fk")
                        .HasColumnType("integer");

                    b.Property<string>("discription")
                        .HasColumnType("text");

                    b.Property<DateTime>("end")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("place")
                        .HasColumnType("text");

                    b.Property<int>("privacy_fk")
                        .HasColumnType("integer");

                    b.Property<DateTime>("start")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("event_type");

                    b.HasKey("id");

                    b.HasIndex("creator_fk");

                    b.HasIndex("privacy_fk");

                    b.ToTable("events");
                });

            modelBuilder.Entity("Notiflib.Notification", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("notif_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateOnly>("date")
                        .HasColumnType("date");

                    b.Property<string>("discription")
                        .HasColumnType("text");

                    b.Property<int>("event_fk")
                        .HasColumnType("integer");

                    b.Property<int>("user_fk")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("event_fk", "user_fk");

                    b.ToTable("notifications");
                });

            modelBuilder.Entity("Notiflib.Participant", b =>
                {
                    b.Property<int>("event_fk")
                        .HasColumnType("integer");

                    b.Property<int>("user_fk")
                        .HasColumnType("integer");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("event_fk", "user_fk");

                    b.HasIndex("user_fk");

                    b.ToTable("participants");
                });

            modelBuilder.Entity("Notiflib.Privacy", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("privacy_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("privacies");
                });

            modelBuilder.Entity("Notiflib.Resourse", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("resourse_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("resourses");
                });

            modelBuilder.Entity("Notiflib.Role", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("role_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("Notiflib.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("f_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("l_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("patronimic")
                        .HasColumnType("text");

                    b.Property<int>("role_fk")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("role_fk");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Notiflib.UserResourse", b =>
                {
                    b.Property<int>("user_res_fk")
                        .HasColumnType("integer");

                    b.Property<int>("restype_res_fk")
                        .HasColumnType("integer");

                    b.Property<string>("link")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("user_res_fk", "restype_res_fk");

                    b.HasIndex("restype_res_fk");

                    b.ToTable("userResourses");
                });

            modelBuilder.Entity("Notiflib.Application", b =>
                {
                    b.HasOne("Notiflib.ApplicationType", "applicationType")
                        .WithMany("applications")
                        .HasForeignKey("app_fk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Notiflib.Event", "ewent")
                        .WithMany("applications")
                        .HasForeignKey("event_app_fk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Notiflib.User", "user")
                        .WithMany("applications")
                        .HasForeignKey("usr_app_fk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("applicationType");

                    b.Navigation("ewent");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Notiflib.Event", b =>
                {
                    b.HasOne("Notiflib.User", "creator")
                        .WithMany("eventsCreated")
                        .HasForeignKey("creator_fk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Notiflib.Privacy", "privacy")
                        .WithMany("events")
                        .HasForeignKey("privacy_fk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("creator");

                    b.Navigation("privacy");
                });

            modelBuilder.Entity("Notiflib.Notification", b =>
                {
                    b.HasOne("Notiflib.Participant", "participant")
                        .WithMany("notifications")
                        .HasForeignKey("event_fk", "user_fk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("participant");
                });

            modelBuilder.Entity("Notiflib.Participant", b =>
                {
                    b.HasOne("Notiflib.Event", "ewent")
                        .WithMany("participants")
                        .HasForeignKey("event_fk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Notiflib.User", "user")
                        .WithMany("eventPart")
                        .HasForeignKey("user_fk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ewent");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Notiflib.User", b =>
                {
                    b.HasOne("Notiflib.Role", "role")
                        .WithMany("users")
                        .HasForeignKey("role_fk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("role");
                });

            modelBuilder.Entity("Notiflib.UserResourse", b =>
                {
                    b.HasOne("Notiflib.Resourse", "resourse")
                        .WithMany("userResourses")
                        .HasForeignKey("restype_res_fk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Notiflib.User", "user")
                        .WithMany("userResourses")
                        .HasForeignKey("user_res_fk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("resourse");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Notiflib.ApplicationType", b =>
                {
                    b.Navigation("applications");
                });

            modelBuilder.Entity("Notiflib.Event", b =>
                {
                    b.Navigation("applications");

                    b.Navigation("participants");
                });

            modelBuilder.Entity("Notiflib.Participant", b =>
                {
                    b.Navigation("notifications");
                });

            modelBuilder.Entity("Notiflib.Privacy", b =>
                {
                    b.Navigation("events");
                });

            modelBuilder.Entity("Notiflib.Resourse", b =>
                {
                    b.Navigation("userResourses");
                });

            modelBuilder.Entity("Notiflib.Role", b =>
                {
                    b.Navigation("users");
                });

            modelBuilder.Entity("Notiflib.User", b =>
                {
                    b.Navigation("applications");

                    b.Navigation("eventPart");

                    b.Navigation("eventsCreated");

                    b.Navigation("userResourses");
                });
#pragma warning restore 612, 618
        }
    }
}
